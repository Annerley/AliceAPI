### YamlMime:ManagedReference
items:
- uid: AliceAPI.Request
  commentId: T:AliceAPI.Request
  id: Request
  parent: AliceAPI
  children:
  - AliceAPI.Request.quantityOfLessonsDay(System.String,System.String)
  - AliceAPI.Request.roomForLesson(System.String,System.String,System.String)
  - AliceAPI.Request.scheduleForDay(System.String,System.String)
  - AliceAPI.Request.scheduleForOneLesson(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: Request
  fullName: AliceAPI.Request
  type: Class
  source:
    remote:
      path: Request.cs
      branch: master
      repo: https://github.com/Annerley/AliceAPI.git
    id: Request
    path: Request.cs
    startLine: 9
  assemblies:
  - AliceAPI
  namespace: AliceAPI
  syntax:
    content: public class Request
    content.vb: Public Class Request
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AliceAPI.Request.scheduleForDay(System.String,System.String)
  commentId: M:AliceAPI.Request.scheduleForDay(System.String,System.String)
  id: scheduleForDay(System.String,System.String)
  parent: AliceAPI.Request
  langs:
  - csharp
  - vb
  name: scheduleForDay(String, String)
  nameWithType: Request.scheduleForDay(String, String)
  fullName: AliceAPI.Request.scheduleForDay(System.String, System.String)
  type: Method
  source:
    remote:
      path: Request.cs
      branch: master
      repo: https://github.com/Annerley/AliceAPI.git
    id: scheduleForDay
    path: Request.cs
    startLine: 22
  assemblies:
  - AliceAPI
  namespace: AliceAPI
  summary: Schedule for the day by requesting with name of the day and student name
  example: []
  syntax:
    content: public string scheduleForDay(string weekDay, string student)
    parameters:
    - id: weekDay
      type: System.String
      description: Name of the day of the week in Russian
    - id: student
      type: System.String
      description: Name od the student in Russian. Ex.&quot;Лапутина Дарья Кирилловна&quot;
    return:
      type: System.String
      description: 'Return string with numbers of lesson and its names. &quot;1 Мат. анализ 2 ТСПП 3 Физ-ра&quot; '
    content.vb: Public Function scheduleForDay(weekDay As String, student As String) As String
  overload: AliceAPI.Request.scheduleForDay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AliceAPI.Request.scheduleForOneLesson(System.String,System.String,System.String)
  commentId: M:AliceAPI.Request.scheduleForOneLesson(System.String,System.String,System.String)
  id: scheduleForOneLesson(System.String,System.String,System.String)
  parent: AliceAPI.Request
  langs:
  - csharp
  - vb
  name: scheduleForOneLesson(String, String, String)
  nameWithType: Request.scheduleForOneLesson(String, String, String)
  fullName: AliceAPI.Request.scheduleForOneLesson(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Request.cs
      branch: master
      repo: https://github.com/Annerley/AliceAPI.git
    id: scheduleForOneLesson
    path: Request.cs
    startLine: 68
  assemblies:
  - AliceAPI
  namespace: AliceAPI
  summary: Schedules for one lesson by requesting with number of the lesson.
  example: []
  syntax:
    content: public string scheduleForOneLesson(string weekDay, string numberOfLesson, string student)
    parameters:
    - id: weekDay
      type: System.String
      description: The week day in Russian.
    - id: numberOfLesson
      type: System.String
      description: The number of lesson.
    - id: student
      type: System.String
      description: The student full-name.
    return:
      type: System.String
      description: String with lessons
    content.vb: Public Function scheduleForOneLesson(weekDay As String, numberOfLesson As String, student As String) As String
  overload: AliceAPI.Request.scheduleForOneLesson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AliceAPI.Request.roomForLesson(System.String,System.String,System.String)
  commentId: M:AliceAPI.Request.roomForLesson(System.String,System.String,System.String)
  id: roomForLesson(System.String,System.String,System.String)
  parent: AliceAPI.Request
  langs:
  - csharp
  - vb
  name: roomForLesson(String, String, String)
  nameWithType: Request.roomForLesson(String, String, String)
  fullName: AliceAPI.Request.roomForLesson(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Request.cs
      branch: master
      repo: https://github.com/Annerley/AliceAPI.git
    id: roomForLesson
    path: Request.cs
    startLine: 115
  assemblies:
  - AliceAPI
  namespace: AliceAPI
  summary: Request room for one lesson by its number
  example: []
  syntax:
    content: public string roomForLesson(string weekDay, string numberOfLesson, string student)
    parameters:
    - id: weekDay
      type: System.String
      description: The week day in Russian.
    - id: numberOfLesson
      type: System.String
      description: The number of lesson.
    - id: student
      type: System.String
      description: Name of student on Russian
    return:
      type: System.String
      description: return number of lesson (type str)
    content.vb: Public Function roomForLesson(weekDay As String, numberOfLesson As String, student As String) As String
  overload: AliceAPI.Request.roomForLesson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AliceAPI.Request.quantityOfLessonsDay(System.String,System.String)
  commentId: M:AliceAPI.Request.quantityOfLessonsDay(System.String,System.String)
  id: quantityOfLessonsDay(System.String,System.String)
  parent: AliceAPI.Request
  langs:
  - csharp
  - vb
  name: quantityOfLessonsDay(String, String)
  nameWithType: Request.quantityOfLessonsDay(String, String)
  fullName: AliceAPI.Request.quantityOfLessonsDay(System.String, System.String)
  type: Method
  source:
    remote:
      path: Request.cs
      branch: master
      repo: https://github.com/Annerley/AliceAPI.git
    id: quantityOfLessonsDay
    path: Request.cs
    startLine: 158
  assemblies:
  - AliceAPI
  namespace: AliceAPI
  summary: Request quantity of lessons on one day of the week
  example: []
  syntax:
    content: public string quantityOfLessonsDay(string weekDay, string student)
    parameters:
    - id: weekDay
      type: System.String
      description: The week day on Russian
    - id: student
      type: System.String
      description: The student name on Russian.
    return:
      type: System.String
      description: Return quantity in str format.
    content.vb: Public Function quantityOfLessonsDay(weekDay As String, student As String) As String
  overload: AliceAPI.Request.quantityOfLessonsDay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AliceAPI
  commentId: N:AliceAPI
  name: AliceAPI
  nameWithType: AliceAPI
  fullName: AliceAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AliceAPI.Request.scheduleForDay*
  commentId: Overload:AliceAPI.Request.scheduleForDay
  name: scheduleForDay
  nameWithType: Request.scheduleForDay
  fullName: AliceAPI.Request.scheduleForDay
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AliceAPI.Request.scheduleForOneLesson*
  commentId: Overload:AliceAPI.Request.scheduleForOneLesson
  name: scheduleForOneLesson
  nameWithType: Request.scheduleForOneLesson
  fullName: AliceAPI.Request.scheduleForOneLesson
- uid: AliceAPI.Request.roomForLesson*
  commentId: Overload:AliceAPI.Request.roomForLesson
  name: roomForLesson
  nameWithType: Request.roomForLesson
  fullName: AliceAPI.Request.roomForLesson
- uid: AliceAPI.Request.quantityOfLessonsDay*
  commentId: Overload:AliceAPI.Request.quantityOfLessonsDay
  name: quantityOfLessonsDay
  nameWithType: Request.quantityOfLessonsDay
  fullName: AliceAPI.Request.quantityOfLessonsDay
